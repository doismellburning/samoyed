package main

import (
	"io"
	"os"
	"os/exec"
	"path/filepath"
	"testing"

	"github.com/stretchr/testify/assert"
)

// Examples from original atest.c source, using packets generated by Dire Wolf gen_packets until we port that...

func Test_atest_basic_1(t *testing.T) {
	var tmpdir = t.TempDir()

	var f = filepath.Join(tmpdir, "test1.wav")

	var cmd = exec.Command("gen_packets", "-o", f) //nolint:gosec

	var err = cmd.Run()
	if err != nil {
		t.Fail()
	}

	os.Args = []string{"atest", f}

	// Capture stdout
	var oldStdout = os.Stdout
	defer func() {
		os.Stdout = oldStdout
	}()

	var r, w, _ = os.Pipe()
	os.Stdout = w

	// Run
	main()

	w.Close() //nolint:gosec

	os.Stdout = oldStdout

	var outputBytes, _ = io.ReadAll(r)

	var outputString = string(outputBytes)

	// I don't yet understand it, but somehow this content doesn't turn up if you capture stdout :(
	// assert.Contains(t, outputString, "WB2OSZ-15")
	// assert.Contains(t, outputString, "The quick brown fox jumps over the lazy dog!")
	assert.Contains(t, outputString, "4 packets decoded")
}
