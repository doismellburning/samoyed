on:
  push:
    branches:
    - "main"
    tags:
    - "**"
  pull_request:
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: "ubuntu-latest"
    outputs:
      SAMOYED_VERSION: "${{ steps.version.outputs.SAMOYED_VERSION }}"
    steps:
    - uses: "actions/checkout@v5"
    - uses: "actions/setup-go@v6"
      with:
        go-version: "1.25"
    - name: "Generate Version"
      id: "version"
      run: |
        export SAMOYED_VERSION=$(date --utc +%Y.%m.%d.%s)-$(git rev-parse --short HEAD)
        echo "Version: $SAMOYED_VERSION"
        echo "SAMOYED_VERSION=$SAMOYED_VERSION" >> $GITHUB_OUTPUT  # Output to be used by the release job
        echo "SAMOYED_VERSION=$SAMOYED_VERSION" >> $GITHUB_ENV  # Env to be used by the make build
    - run: "sudo apt update && sudo apt install --yes libudev-dev libhamlib-dev libasound2-dev libavahi-client-dev libbsd-dev"
    - run: "sudo apt install --yes morse2ascii"  # For decoding the morse
    - run: "make stats"
    - run: "make cmds"
    - name: "Install Dire Wolf to test parsing"
      run: "sudo apt install --yes direwolf"
    - run: "make test"
    - run: "make coveragereport"
    - run: "pipx install reuse"  # For validating the licence config
    - run: "make check"
    - name: "Ensure nothing got fixed (i.e. everything was already fine)"
      run: "git diff --quiet && git diff --cached --quiet"
    - name: "Set filename"
      run: 'echo "TARBALL_NAME=samoyed-${{env.SAMOYED_VERSION }}-${{ runner.os }}-${{ runner.arch }}.tgz" >> $GITHUB_ENV'
    - name: "Build tarball"
      run: "tar czvf \"$TARBALL_NAME\" dist/"
    - uses: "actions/upload-artifact@v4"
      with:
        name: "${{ env.TARBALL_NAME }}"
        path: "${{ env.TARBALL_NAME }}"
        if-no-files-found: "error"
        compression-level: 0

  release:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: build_and_test
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
    steps:
    - uses: "actions/download-artifact@v5"
      with:
        merge-multiple: true
    - name: "Create Release"
      uses: "softprops/action-gh-release@v2"
      with:
        tag_name: "${{ needs.build_and_test.outputs.SAMOYED_VERSION }}"
        name: "Release ${{ needs.build_and_test.outputs.SAMOYED_VERSION }}"
        body: |
          Automated release for commit ${{ github.sha }}.

          CHANGELOG forthcoming.
        files: "*.tgz"
        fail_on_unmatched_files: true
        draft: true  # TODO Fix
