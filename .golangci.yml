version: "2"
linters:
  default: all
  disable:
    - "cyclop"  # One day
    - "dupl"  # One day
    - "dupword"  # One day
    - "errcheck"  # I appreciate the intent, but I'm not checking errors on fmt.Printf etc.
    - "forbidigo"  # fmt.Print* are fine for now
    - "funlen"  # We have inherited lots of long lines
    - "gochecknoglobals"  # One day there will be no globals but I do not expect it will be today
    - "gocyclo"  # One day
    - "godot"  # Implicit full stops are ok
    - "godox"  # There will be TODOs
    - "intrange" # Another thing that I like in theory, but am not prioritising right now
    - "lll"  # We have inherited lots of long lines
    - "maintidx"  # One day...
    - "mnd"  # I do not like magic numbers, but there are plenty inherited from upstream, so let's roll with them for now
    - "nlreturn"  # Lots of false positives on C code that isn't a return
    - "nolintlint"  # Doesn't play nicely with Cgo
    - "paralleltest"  # One day, but let's have *working* tests first
    - "prealloc"  # One day, but not now
    - "testpackage"  # Noble intent, but right now we're doing all sorts of juggling with packages, so let's save this for later
    - "varnamelen"  # Noble intent, but we're inheriting lots of short variable names, and I'd like to stay close to upstream at first
    - "whitespace"  # I do not have the energy to deal with extraneous leading/trailing newlines right now
    - "wrapcheck"  # Error wrapping is the least of my concerns
  settings:
    cyclop:
      max-complexity: 60  # I sure wish this could be lower
    depguard:
      rules:
        main:
          list-mode: lax
          deny:
            - pkg: invalid
              desc: Dummy deny because we need a non-empty list
    exhaustive:
      default-signifies-exhaustive: true  # Soften the check for now...
    gocognit:
      min-complexity: 180  # I sure wish this could be lower
    goconst:
      min-occurrences: 5
    gocritic:
      disabled-checks:
        - captLocal  # I agree, but I want to stay semi-consistent with upstream for now
        - commentFormatting  # Yes but later
        - dupSubExpr  # Too many false positives on cgo code
        - elseif  # I agree, but I'll fix it later
        - ifElseChain  # Reasonable but effort
        - underef  # Too many false positives on cgo code
    gocyclo:
      min-complexity: 60  # I sure wish this could be lower
    nestif:
      min-complexity: 30  # There's lots of upstream complexity, so let's soft-disable this
    revive:
      rules:
        - name: "var-naming"
          disabled: true  # There's going to be assorted naming conventions inherited from the original C for a while
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gci
    - gofmt
    - goimports
    - golines
  exclusions:
    warn-unused: true
  settings:
    golines:
      max-len: 200  # Long-ish is ok, let's try to minimise deviation from upstream
